basePath: /
definitions:
  controllers.LoginRequest:
    properties:
      password:
        type: string
      username:
        description: bisa username atau email
        type: string
    type: object
  models.ErrorResponse:
    properties:
      code:
        example: 400
        type: integer
      error:
        type: string
      message:
        example: Bad Request
        type: string
    type: object
  models.GenericResponse:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: Success
        type: string
    type: object
  models.KategoriMitra:
    properties:
      deskripsi:
        type: string
      id:
        type: integer
      keterangan:
        type: string
      nama:
        type: string
    type: object
  models.Mitra:
    properties:
      created_at:
        type: string
      deskripsi:
        type: string
      id:
        type: integer
      kategori_mitra:
        $ref: '#/definitions/models.KategoriMitra'
      kategori_mitra_id:
        type: integer
      logo:
        type: string
      nama:
        type: string
      tanggal_mulai:
        type: string
      tanggal_selesai:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API untuk mengelola data RT, RW, dan Pendidikan menggunakan API_KEY
    & Bearer Token.
  title: API Data Yatim
  version: "1.0"
paths:
  /api/aktivitas/all:
    get:
      description: Ambil semua data aktivitas yang berstatus published dan sedang
        aktif (tanggal mulai <= sekarang <= tanggal selesai), beserta gambar & kategori
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GenericResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      summary: Get semua data aktivitas
      tags:
      - Aktivitas
  /api/mitra/all:
    get:
      description: Mengambil semua data Mitra beserta kategori_mitra dan URL logo
        (proxy dari Laravel storage)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GenericResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      summary: Ambil semua Mitra
      tags:
      - Mitra
  /api/mitra/logo/{filename}:
    get:
      description: Menampilkan logo mitra melalui Golang (proxy dari Laravel storage)
      parameters:
      - description: Nama file logo
        in: path
        name: filename
        required: true
        type: string
      produces:
      - image/png
      responses:
        "200":
          description: OK
          schema:
            type: file
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Proxy logo mitra
      tags:
      - Mitra
  /api/mitra/personal:
    post:
      consumes:
      - multipart/form-data
      description: Menambahkan data donasi personal (tanpa relasi langsung ke mitra
        lain). Data dikirim via form-data beserta bukti transfer.
      parameters:
      - description: Nama Donatur
        in: formData
        name: nama
        required: true
        type: string
      - description: Jumlah Donasi (Rp)
        in: formData
        name: jumlah
        required: true
        type: string
      - description: Pesan Donasi
        in: formData
        name: pesan
        type: string
      - description: Metode Pembayaran (qris/bank)
        in: formData
        name: metode
        type: string
      - description: Upload Bukti Transfer
        in: formData
        name: bukti
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Mitra'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      summary: Tambah Donasi Personal
      tags:
      - Donasi
  /api/profil-yayasan/all:
    get:
      description: Ambil semua data profil yayasan tanpa pagination.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GenericResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      summary: Get semua Profil Yayasan
      tags:
      - Profil Yayasan
  /api/rt:
    get:
      description: Ambil daftar RT per halaman.
      parameters:
      - description: Halaman (default 1)
        in: query
        name: page
        type: integer
      - description: Jumlah data per halaman (default 10)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      summary: Get RT dengan pagination
      tags:
      - RT
  /api/rt/all:
    get:
      description: Ambil semua data RT tanpa pagination.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GenericResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      summary: Get semua RT
      tags:
      - RT
  /api/struktur-organisasi/all:
    get:
      description: Ambil semua anggota Struktur Organisasi beserta jabatan, parent
        (atasan), dan URL foto (proxy)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GenericResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      summary: Ambil semua anggota Struktur Organisasi
      tags:
      - StrukturOrganisasi
  /api/struktur-organisasi/foto/{filename}:
    get:
      description: Menampilkan foto anggota melalui Golang (proxy Laravel atau storage)
      parameters:
      - description: Nama file foto
        in: path
        name: filename
        required: true
        type: string
      produces:
      - image/png
      responses:
        "200":
          description: OK
          schema:
            type: file
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Proxy foto anggota Struktur Organisasi
      tags:
      - StrukturOrganisasi
  /login:
    post:
      consumes:
      - application/json
      description: Login menggunakan username/email untuk mendapatkan token JWT.
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login untuk mendapatkan JWT Token
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: API_KEY
    type: apiKey
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
