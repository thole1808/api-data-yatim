basePath: /
definitions:
  controllers.LoginRequest:
    properties:
      password:
        type: string
      username:
        description: bisa username atau email
        type: string
    type: object
  models.RT:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: integer
      number:
        type: string
      rw_id:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API untuk mengelola data RT, RW, dan Pendidikan menggunakan API_KEY
    & Bearer Token.
  title: API Data Yatim
  version: "1.0"
paths:
  /api/rt:
    get:
      description: Ambil daftar RT per halaman.
      parameters:
      - description: Halaman (default 1)
        in: query
        name: page
        type: integer
      - description: Jumlah data per halaman (default 10)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      summary: Get RT dengan pagination
      tags:
      - RT
  /api/rt/all:
    get:
      description: Ambil semua data RT tanpa pagination.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RT'
            type: array
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      summary: Get semua RT
      tags:
      - RT
  /login:
    post:
      consumes:
      - application/json
      description: Login menggunakan username/email untuk mendapatkan token JWT.
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login untuk mendapatkan JWT Token
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: API_KEY
    type: apiKey
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
