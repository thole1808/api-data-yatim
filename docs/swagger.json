{
    "swagger": "2.0",
    "info": {
        "description": "API untuk mengelola data RT, RW, dan Pendidikan menggunakan API_KEY \u0026 Bearer Token.",
        "title": "API Data Yatim",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/aktivitas/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Ambil semua data aktivitas yang berstatus published dan sedang aktif (tanggal mulai \u003c= sekarang \u003c= tanggal selesai), beserta gambar \u0026 kategori",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aktivitas"
                ],
                "summary": "Get semua data aktivitas",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/mitra/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mengambil semua data Mitra beserta kategori_mitra dan URL logo (proxy dari Laravel storage)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mitra"
                ],
                "summary": "Ambil semua Mitra",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/mitra/logo/{filename}": {
            "get": {
                "description": "Menampilkan logo mitra melalui Golang (proxy dari Laravel storage)",
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "Mitra"
                ],
                "summary": "Proxy logo mitra",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nama file logo",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/mitra/personal": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Menambahkan data donasi personal (tanpa relasi langsung ke mitra lain). Data dikirim via form-data beserta bukti transfer.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Donasi"
                ],
                "summary": "Tambah Donasi Personal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nama Donatur",
                        "name": "nama",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Jumlah Donasi (Rp)",
                        "name": "jumlah",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pesan Donasi",
                        "name": "pesan",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Metode Pembayaran (qris/bank)",
                        "name": "metode",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Upload Bukti Transfer",
                        "name": "bukti",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Mitra"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/profil-yayasan/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Ambil semua data profil yayasan tanpa pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profil Yayasan"
                ],
                "summary": "Get semua Profil Yayasan",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/rt": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Ambil daftar RT per halaman.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RT"
                ],
                "summary": "Get RT dengan pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Halaman (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Jumlah data per halaman (default 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/rt/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Ambil semua data RT tanpa pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RT"
                ],
                "summary": "Get semua RT",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/struktur-organisasi/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Ambil semua anggota Struktur Organisasi beserta jabatan, parent (atasan), dan URL foto (proxy)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StrukturOrganisasi"
                ],
                "summary": "Ambil semua anggota Struktur Organisasi",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/struktur-organisasi/foto/{filename}": {
            "get": {
                "description": "Menampilkan foto anggota melalui Golang (proxy Laravel atau storage)",
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "StrukturOrganisasi"
                ],
                "summary": "Proxy foto anggota Struktur Organisasi",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nama file foto",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login menggunakan username/email untuk mendapatkan token JWT.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login untuk mendapatkan JWT Token",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "description": "bisa username atau email",
                    "type": "string"
                }
            }
        },
        "models.Donasi": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "jumlah": {
                    "type": "string"
                },
                "metode": {
                    "type": "string"
                },
                "mitra": {
                    "$ref": "#/definitions/models.Mitra"
                },
                "mitra_id": {
                    "type": "integer"
                },
                "nama": {
                    "description": "🔹 Tambahkan kolom nama",
                    "type": "string"
                },
                "pesan": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "Bad Request"
                }
            }
        },
        "models.GenericResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "models.KategoriMitra": {
            "type": "object",
            "properties": {
                "deskripsi": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "keterangan": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                }
            }
        },
        "models.Mitra": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deskripsi": {
                    "type": "string"
                },
                "donasis": {
                    "description": "Relasi ke Donasi",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Donasi"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "kategori_mitra": {
                    "$ref": "#/definitions/models.KategoriMitra"
                },
                "kategori_mitra_id": {
                    "type": "integer"
                },
                "logo": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "tanggal_mulai": {
                    "type": "string"
                },
                "tanggal_selesai": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "API_KEY",
            "in": "header"
        },
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}